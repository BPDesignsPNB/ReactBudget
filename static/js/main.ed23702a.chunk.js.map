{"version":3,"sources":["components/Header.jsx","components/Formulario.jsx","components/Gasto.jsx","components/Listado.jsx","components/Presupuesto.jsx","components/Restante.jsx","helpers/helper.js","components/ControlPresupuesto.jsx","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","Formulario","gastoRef","React","createRef","cantidadRef","crearGasto","evento","preventDefault","gasto","_this","current","value","cantidad","agregarGasto","currentTarget","reset","onSubmit","this","className","ref","type","placeholder","Component","Gasto","_this$props$gasto","Listado","Object","keys","gastos","map","key","components_Gasto","Presupuesto","presupuesto","Restante","restante","revisarPresupuesto","ControlPresupuesto","Fragment","components_Presupuesto","components_Restante","App","state","objectSpread","concat","Date","now","restarPresupuesto","setState","restar","Number","String","obtenerPresupuesto","prompt","totalPresupuesto","parseInt","validarPresupuesto","components_Header","components_Formulario","components_Listado","components_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed23702a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n        <h1>{props.titulo}</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Formulario extends Component {\r\n\r\n    gastoRef = React.createRef();\r\n    cantidadRef = React.createRef();\r\n\r\n\r\n    crearGasto = (evento) =>{\r\n        //default\r\n        evento.preventDefault();\r\n\r\n        //objeto con datos\r\n        const gasto = {\r\n            gasto: this.gastoRef.current.value,\r\n            cantidad: this.cantidadRef.current.value\r\n        }\r\n        //agregarlo y enviar a props\r\n        this.props.agregarGasto(gasto);\r\n\r\n        //resetear formulario\r\n        evento.currentTarget.reset();\r\n    }\r\n\r\n    render() {\r\n        return <form onSubmit={this.crearGasto}>\r\n            <h2>Agregar gastos</h2>\r\n            <div className=\"campo\">\r\n              <label>Nombre Gasto</label>\r\n              <input className=\"u-full-width\" ref={this.gastoRef} type=\"text\" placeholder=\"Ej. Transporte\" />\r\n            </div>\r\n            <div className=\"campo\">\r\n              <label>Cantidad Gastada</label>\r\n              <input className=\"u-full-width\" ref={this.cantidadRef} type=\"text\" placeholder=\"Ej. 300\" />\r\n            </div>\r\n            <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\r\n          </form>;\r\n    }\r\n}\r\n\r\nFormulario.propTypes = {\r\n  agregarGasto: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Formulario;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Gasto extends Component {\r\n    render() {\r\n        //destructuracion\r\n        const {gasto, cantidad} = this.props.gasto;\r\n\r\n        return (\r\n            <li className=\"gastos\">\r\n                <p>\r\n                    {gasto}\r\n                    <span className=\"gasto\">$ {cantidad}</span>\r\n                </p>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nGasto.propTypes = {\r\n  gasto: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Gasto;","import React, { Component } from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Listado extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"gastos-realizados\">\r\n                <h2>Listado de Gastos</h2>\r\n                {Object.keys(this.props.gastos).map(key =>(\r\n                    <Gasto \r\n                        key={key}\r\n                        gasto = {this.props.gastos[key]}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nListado.propTypes = {\r\n    gastos: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Listado;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Presupuesto extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"alert alert-primary\">\r\n            <p>Presupuesto: $ {this.props.presupuesto}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPresupuesto.propTypes = {\r\n  presupuesto: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Presupuesto;","import React, { Component } from 'react';\r\nimport { revisarPresupuesto } from '../helpers/helper';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Restante extends Component {\r\n    render() {\r\n        const presupuesto = this.props.presupuesto;\r\n        const restante = this.props.restante;\r\n        return (\r\n            <div className={revisarPresupuesto(presupuesto,restante)}>\r\n                <p>Restante: $ {this.props.restante}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRestante.propTypes = {\r\n  presupuesto: PropTypes.string.isRequired,\r\n  restante: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Restante;","export const validarPresupuesto = presupuesto => {\r\n    let totalPresupuesto = parseInt(presupuesto, 10) || 0;\r\n\r\n    if (totalPresupuesto > 0) {\r\n        return totalPresupuesto;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n    // Comprobar el 25% \r\n    if ((presupuesto / 4) > restante) {\r\n        clase = 'alert alert-danger';\r\n    //50%\r\n    } else if ((presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    return clase;\r\n}","import React, { Component } from 'react';\r\nimport Presupuesto from './Presupuesto';\r\nimport Restante from './Restante';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ControlPresupuesto extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Presupuesto\r\n                    presupuesto={this.props.presupuesto}\r\n                />\r\n                <Restante\r\n                    presupuesto={this.props.presupuesto}\r\n                    restante={this.props.restante}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.string.isRequired,\r\n    restante: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ControlPresupuesto;","import React, { Component } from 'react';\nimport '../sass/App.scss';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Listado from './Listado';\nimport ControlPresupuesto from './ControlPresupuesto';\nimport {validarPresupuesto} from '../helpers/helper';\n\nclass App extends Component {\n\n  state = {\n    gastos: {},\n    presupuesto: '',\n    restante: ''\n  }\n\n  ///agregar un nuevo gasto al state\n  agregarGasto = (gasto) => {\n    //tomar una copia del state actual\n    const gastos = {...this.state.gastos}\n\n    //agregar el gasto al objeto del state creando una key con un timestamp\n    gastos[`gasto${Date.now()}`] = gasto;\n\n    //restar  al presupuesto\n    this.restarPresupuesto(gasto.cantidad);\n\n    //enviarlo a state\n    this.setState({ \n      gastos\n    })\n  }\n\n  //restar del presupuesto un nuevo gasto ingresado\n  restarPresupuesto = (cantidad) => {\n    //leer el gasto\n    let restar = Number(cantidad);\n\n    //copia del state actual\n    let restante = this.state.restante\n    //restar gasto del state\n    restante -= restar;\n    \n    restante = String(restante);    //nuevo state\n    this.setState({\n      restante\n    });\n  }\n  //presupuesto prompt\n  componentDidMount(){\n    this.obtenerPresupuesto();\n  };\n\n  obtenerPresupuesto(){\n\n    let presupuesto = prompt('Ingresar presupuesto semanal');\n\n    let resultado = validarPresupuesto(presupuesto);\n    //envia al state el presupuesto ingresado\n    if (resultado) {\n      this.setState({\n        presupuesto: presupuesto,\n        restante: presupuesto\n      })\n    }\n    else{\n      this.obtenerPresupuesto();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Header\n          titulo=\"Presupuesto Semanal\"\n        />\n        <div className=\"contenido-principal contenido\">\n          <div className=\"row\">\n            <div className=\"one-half column\">\n              <Formulario\n                agregarGasto = {this.agregarGasto}\n              />\n            </div>\n            <div className=\"one-half column\">\n              <Listado\n                gastos = {this.state.gastos}\n              />\n              <ControlPresupuesto\n                presupuesto={this.state.presupuesto}\n                restante={this.state.restante}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}